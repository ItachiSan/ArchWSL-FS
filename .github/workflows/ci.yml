name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_packages:
    name: Build Arch packages for the RootFS
    runs-on: ubuntu-latest
    container: archlinux
    steps:
      - name: Set up build environments
        run: |
          pacman -Syu --needed --noconfirm base-devel
          useradd -m build
          echo "build ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
      - name: Build fakeroot-tcp
        run: |
          curl -O https://aur.archlinux.org/cgit/aur.git/snapshot/fakeroot-tcp.tar.gz
          tar xf fakeroot-tcp.tar.gz
          cd fakeroot-tcp
          yes | sudo -u build makepkg -src
          cp *.pkg.tar.zst ..
          cd ..
      - name: Build glibc-linux4
        run: |
          curl -O https://aur.archlinux.org/cgit/aur.git/snapshot/glibc-linux4.tar.gz
          tar xf glibc-linux4.tar.gz
          cd glibc-linux4
          yes | sudo -u build makepkg -src
          cp *.pkg.tar.zst ..
          cd ..
      - name: Show the current status
        run: ls -R
      - name: Store packages as artifacts for RootFS compilation
        uses: actions/upload-artifact@v4
        with:
          name: arch_packages
          path: "*.pkg.tar.zst"

  compile:
    name: Compile RootFS
    runs-on: ubuntu-latest
    needs:
      - build_packages
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: arch_packages
      - name: Show the current status
        run: ls -R
      - name: Keep only relevant packages
        run:
          rm -v *debug*.pkg.tar.zst lib32-*.pkg.tar.zst
          mv -v fakeroot-tcp-*.pkg.tar.zst fakeroot-tcp.pkg.tar.zst
          mv -v glibc-linux4-*.pkg.tar.zst glibc-linux4.pkg.tar.zst
      # Standard stuff
      - name: Build the rootfs
        run: make
